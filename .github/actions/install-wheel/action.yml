name: Install wheel for TT project for given run_id

description: Install wheel for TT project for given run_id

inputs:
  project:
    description: 'Name of the project to install wheel for'
    required: true
    type: string
  run_id:
    description: 'Run ID to install wheel for'
    required: false
    type: string
  run_id_source:
    description: "Repo source for provided workflow run ID"
    required: false
    type: string

runs:
  using: 'composite'
  steps:
    - name: Set wheel name
      id: set-wheel-name
      shell: bash
      run: |
        if [ "${{ inputs.project }}" = "tt-forge-fe" ]; then
          echo "artifact=forge-wheel" >> $GITHUB_OUTPUT
          echo "wheel_name=tt_*" >> $GITHUB_OUTPUT
        elif [ "${{ inputs.project }}" = "tt-torch" ]; then
          echo "artifact=install-artifacts-release" >> $GITHUB_OUTPUT
          echo "wheel_name=wheels/tt_*" >> $GITHUB_OUTPUT
          echo "untar='true'" >> $GITHUB_OUTPUT
        elif [ "${{ inputs.project }}" = "tt-xla" ]; then
          echo "artifact=xla-whl-release" >> $GITHUB_OUTPUT
          echo "wheel_name=pjrt_*" >> $GITHUB_OUTPUT
        else
          echo "Unknown project: ${{ inputs.project }}"
          exit 1
        fi
        if [ -z "${{ inputs.run_id }}" ]; then
          echo "run_id is not set, download from latest succesful run in main"
        fi
        if [ -z "${{ inputs.run_id_source }}" ]; then
          echo "run_id_source is not set, using project repository"
          echo "run_id_source=${{ inputs.project }}" >> $GITHUB_OUTPUT
        else
          echo "run_id_source=${{ inputs.run_id_source }}" >> $GITHUB_OUTPUT
        fi

    - name: Download wheel from run_id
      if: inputs.run_id && inputs.run_id != ''
      uses: dawidd6/action-download-artifact@v11
      with:
        run_id: ${{ inputs.run_id }}
        name: "${{ steps.set-wheel-name.outputs.artifact }}"
        name_is_regexp: false
        repo: "tenstorrent/${{ steps.set-wheel-name.outputs.run_id_source }}"
        check_artifacts: true

    - name: Download latest wheel
      if: failure() ||(!inputs.run_id || inputs.run_id == '')
      uses: dawidd6/action-download-artifact@v11
      with:
        workflow_conclusion: success
        workflow: on-push.yml
        branch: main
        name: "${{ steps.set-wheel-name.outputs.artifact }}"
        name_is_regexp: false
        repo: "tenstorrent/${{ inputs.project }}"
        check_artifacts: true

    - name: Untar
      if: ${{ steps.set-wheel-name.outputs.untar }}
      shell: bash
      run: tar -xvf "artifact.tar"

    - name: Install wheel
      shell: bash
      run: |
        pip install ${{ steps.set-wheel-name.outputs.wheel_name }} --upgrade
