name: Tag and release workflow
description: Create a tag and a release for it

inputs:
  wheel-artifact-name:
    required: true
    description: Name of the wheel's artifact that is getting released
  untar-wheel-artifact:
    required: false
    description: Flag that decides if you untar the artifact
    default: "false"

runs:
  using: composite
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-tags: true
        fetch-depth: 0

    # - name: Add a tag
    #   id: add-tag
    #   shell: bash
    #   run: |
    #     TAG_NAME="nightly-$(date +'%Y%m%d')-${{ github.run_id }}-${{ github.run_attempt }}"
    #     git tag "$TAG_NAME"
    #     git push origin "$TAG_NAME"
    #     echo "tag-name=$TAG_NAME" >> "$GITHUB_OUTPUT"

    - name: Download wheel artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.wheel-artifact-name }}
        path: ${{ runner.temp }}

    - name: Untar the wheel artifact
      if: ${{ inputs.untar-wheel-artifact == 'true' }}
      shell: bash
      run: |
        cd ${{ runner.temp }}
        tar xvf artifact.tar
        cp wheels/*.whl .
        cd -

    - name: Push the tag and get commit diff
      id: push-tag
      shell: bash
      env:
        GH_TOKEN: ${{ env.GITHUB_TOKEN }}
      run: |
        RESPONSE=$(curl -s -H "Authorization: token $GH_TOKEN" \
          "https://api.github.com/repos/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}")
        echo "First started at: $(echo "$RESPONSE" | jq -r .created_at)"

        workflow_start_date=$(echo "$RESPONSE" | jq -r .created_at)
        workflow_date=$(echo "$workflow_start_date" | cut -d'T' -f1)

        if [ "$(date +'%Y-%m-%d')" != "$workflow_date" ]; then
          echo "Old nigthly workflow can't create a release"
          exit 0
        fi

        TAG_NAME="nightly-$(date +'%Y%m%d')"

        if git rev-parse "$TAG_NAME" >/dev/null 2>&1; then
          echo "Nighly release already exists for today"
          exit 0
        fi

        git tag "$TAG_NAME"
        git push origin "$TAG_NAME"

        PREV_TAG=$(git tag --list 'nightly-*' --sort=-creatordate | grep -v "^$TAG_NAME$" | head -n 1)

        if [ -z "$PREV_TAG" ]; then
          echo "No previous nightly tag found."
          echo "commits=No previous nightly tag found." >> "$GITHUB_OUTPUT"
        else
          COMMITS=$(git log --pretty=format:'- %h %s (%an)' "$PREV_TAG..$TAG_NAME")
          if [ -z "$COMMITS" ]; then
            COMMITS="No new commits since last nightly."
          fi

          echo "commits<<EOF" >> "$GITHUB_OUTPUT"
          echo "$COMMITS" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"
        fi

        echo "tag-name=$TAG_NAME" >> "$GITHUB_OUTPUT"

    - name: Create a release
      id: create-release
      uses: softprops/action-gh-release@v2
      if: ${{ steps.push-tag.outputs.tag-name != '' }}
      with:
        tag_name: ${{ steps.push-tag.outputs.tag-name }}
        name: "Nigthly release: ${{ steps.push-tag.outputs.tag-name }}"
        body: |
          Release created during the nigthly workflow run.

          Commits since the last nightly:
          ${{ steps.commit-list.outputs.commits }}
        files: ${{ runner.temp }}/*.whl
      env:
        GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}

    - name: Remove tag if release creation failed
      shell: bash
      if: ${{ steps.create-release.conclusion == 'failure' }}
      run: |
        TAG_NAME=${{steps.push-tag.outputs.tag-name}}
        git push --delete origin "$TAG_NAME" || echo "Failed to remove the remote tag"
        git tag -d "$TAG_NAME" || echo "Failed to remove the local tag"
        echo "Tag $TAG_NAME removed due to release creation failure"
