

name: "Create RC branch"
description: "Create RC branch"
inputs:
  repo:
    description: "Repo name"
    required: true
  draft:
    description: "Draft release"
    required: false
    default: false
  GH_TOKEN:
    description: "GitHub token"
    required: true
  commit:
    description: "Commit sha if you want to override release branch selection by last passing workflow"
    required: false
  workflow_allow_failed:
    description: "Ignore if workflow has failed"
    required: false
    type: boolean
    default: false

outputs:
  branch_name:
    description: "Branch name"
    value: ${{ steps.create-rc-branch.outputs.branch_name }}
  tag_name:
    description: "Tag name"
    value: ${{ steps.create-rc-branch.outputs.tag_name }}

runs:
  using: "composite"
  steps:
    - name: version tag
      id: version-tag
      shell: bash
      run: |
        if [ -f .version ]; then
          source .version
        else
          wget https://raw.githubusercontent.com/tenstorrent/tt-forge/refs/heads/main/.version
          source .version
        fi

        echo "MAJOR=$MAJOR" >> $GITHUB_OUTPUT
        echo "MINOR=$MINOR" >> $GITHUB_OUTPUT

    - name: Set Release Facts
      id: set-release-facts
      uses: ./.github/actions/set-release-facts
      with:
        repo: ${{ inputs.repo }}
        release_type: 'rc'

    - name: Find workflow candidate
      id: find_workflow
      uses: ./.github/actions/find-workflow
      env:
        GH_TOKEN: ${{ github.token }}
      with:
        repo: ${{ inputs.repo }}
        workflow: ${{ inputs.draft == 'true' && 'Daily Releaser' || steps.set-release-facts.outputs.workflow }}
        workflow_allow_failed: ${{ inputs.workflow_allow_failed }}
        workflow_result_in_job: ${{ steps.set-release-facts.outputs.workflow_result_in_job }}
        commit: ${{ inputs.commit }}

    - name: Create new branch and tag
      id: create-rc-branch
      shell: bash
      run: |
        # Get the latest release branch and create a new semver bumped release branch in frontend repos

        release_prefix="release"
        tag_prefix="${{ steps.version-tag.outputs.MAJOR }}.${{ steps.version-tag.outputs.MINOR }}.0"

        if [ "${{ inputs.draft }}" == "true" ]; then
            release_prefix="draft-${{ steps.set-release-facts.outputs.repo_short }}-release"
            tag_prefix="draft-${{ steps.set-release-facts.outputs.repo_short }}-${tag_prefix}"
        fi

        new_release_tag="${tag_prefix}rc1"
        new_release_branch_name="${release_prefix}-${{ steps.version-tag.outputs.MAJOR }}.${{ steps.version-tag.outputs.MINOR }}"

        echo "New Release Branch is $new_release_branch_name"
        echo "New Release Tag is $new_release_tag"

        echo "branch_name=$new_release_branch_name" >> $GITHUB_OUTPUT
        echo "tag_name=$new_release_tag" >> $GITHUB_OUTPUT

    - uses: mukunku/tag-exists-action@v1.6.0
      id: check-tag
      with:
        tag: ${{ steps.create-rc-branch.outputs.tag_name }}
        repo: ${{ inputs.repo }}

    - name: Checkout target repo
      uses: actions/checkout@v4
      if: ${{  inputs.draft == 'false' && steps.check-tag.outputs.exists == 'false' }}
      with:
        repository: ${{ inputs.repo }}
        token: ${{ inputs.GH_TOKEN }}
        ref: ${{ steps.find_workflow.outputs.run-commit-sha }}
        fetch-depth: 0

    - name: Create Release Branch
      if: steps.check-tag.outputs.exists == 'false'
      shell: bash
      run: |
        # Create the release branch and add the starter tag

        new_release_tag="${{ steps.create-rc-branch.outputs.tag_name }}"
        new_release_branch_name="${{ steps.create-rc-branch.outputs.branch_name }}"

        git checkout -b $new_release_branch_name
        git tag "$new_release_tag"
        git push origin $new_release_branch_name --tags

        # Clean up branch and tag if draft for e2e testing
        if [[ "${{ inputs.draft }}" == "true" ]]; then
            git push --delete origin $new_release_tag
            git push -d origin $new_release_branch_name
        fi

    # Recheckout forge repo to fix side effects for clean up job
    - uses: actions/checkout@v4
