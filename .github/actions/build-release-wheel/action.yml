name: "Build Wheel Release"
description: "Build Wheel Release"
inputs:
  repo:
    description: "Repo name"
    required: true
  branch:
    description: "Branch name"
    default: "main"
    required: false
  workflow:
    description: "Workflow name"
    required: true
  workflow_result_in_job:
    description: "Set that workflow result is job result"
    default: ""
    required: false
  release_type:
    description: "Release type"
    required: true
  latest_branch_commit:
    description: "Latest branch commit"
    required: false
  current_release_tag_commit:
    description: "Current release tag commit"
    required: false
  new_version_tag:
    description: "New version tag for wheel"
    required: false
  draft:
    description: "Draft release"
    required: true
  unique_artifact_suffix:
    description: "Unique artifacts slug for draft testing"
    required: false
  override_release_fact_workflow:
    description: "Override release facts workflow"
    required: false
    type: string
    default: ''

outputs:
  release-artifacts-id:
    description: "release artifacts"
    value: ${{ steps.release-artifacts.outputs.artifact-id }}
  workflow_run_status_symbol:
    description: 'Workflow run status symbol'
    value: ${{ steps.find_workflow_build_release.outputs.run-status-symbol }}
  workflow_run_url:
    description: 'Workflow run URL'
    value: ${{ steps.find_workflow_build_release.outputs.run-url }}
  target_commit:
    description: "Target commit"
    value: ${{ steps.find_workflow_build_release.outputs.run-commit-sha }}
  wheel_files_path:
    description: "Wheel files path"
    value: ${{ steps.get-wheel-files.outputs.wheel_files_path }}

runs:
  using: "composite"
  steps:
    - name: Set Release Facts
      id: set-release-facts
      uses: ./.github/actions/set-release-facts
      with:
        repo: ${{ inputs.repo }}
        release_type: ${{ inputs.release_type }}
        draft: ${{ inputs.draft }}
        new_version_tag: ${{ inputs.new_version_tag }}
        branch: ${{ inputs.branch }}

    - name: Find workflow
      id: find_workflow_build_release
      uses: ./.github/actions/find-workflow
      with:
        repo: ${{ inputs.repo }}
        branch: ${{ steps.set-release-facts.outputs.build_release_find_workflow_branch }}
        workflow: ${{ steps.set-release-facts.outputs.workflow }}
        workflow_allow_failed: ${{ steps.set-release-facts.outputs.workflow_allow_failed }}
        workflow_result_in_job: ${{ steps.set-release-facts.outputs.workflow_result_in_job }}
        commit: ${{ inputs.latest_branch_commit }}
        override_release_fact_workflow: ${{ inputs.override_release_fact_workflow }}
        ignore_artifacts: ${{ steps.set-release-facts.outputs.ignore_artifacts }}

    - name: Uplift ${{ inputs.repo }} artifacts
      if: ${{ steps.set-release-facts.outputs.ignore_artifacts == 'false' }}
      uses: ./.github/actions/uplift-artifacts
      id: uplift-artifacts
      with:
        repo: ${{ inputs.repo }}
        run-id: ${{ steps.find_workflow_build_release.outputs.run-id }}
        artifact_download_glob: ${{ steps.set-release-facts.outputs.artifact_download_glob }}
        artifact_cleanup_file_glob: ${{ steps.set-release-facts.outputs.artifact_cleanup_file_glob }}
        artifact_cleanup_folder_glob: ${{ steps.set-release-facts.outputs.artifact_cleanup_folder_glob }}

    - name: Create tt-forge wheel
      if: ${{ inputs.repo == 'tenstorrent/tt-forge' }}
      uses: ./.github/actions/tt-forge-wheel
      with:
        new_version_tag: ${{ steps.set-release-facts.outputs.new_version_tag }}
        draft: ${{ inputs.draft }}
        release_type: ${{ inputs.release_type }}

    - name: Update Wheel version to ${{ steps.set-release-facts.outputs.build_release_tag }}
      if: ${{ inputs.repo != 'tenstorrent/tt-forge' }}
      env:
        WHEEL_VERSION: ${{ steps.set-release-facts.outputs.build_release_tag }}
        WHEEL_ROOT_PATH: ${{ github.workspace }}/release/artifacts
      run: ./.github/scripts/wheel-version-updater.sh
      shell: bash

    - name: Get wheel files path
      shell: bash
      id: get-wheel-files
      run: |
        wheel_files_path=$(find "${{ github.workspace }}/release/artifacts" -type f -iname "*.whl" -exec dirname {} \; | sort -u | xargs -I{} realpath --relative-to="${{ github.workspace }}" {})
        echo "wheel_files_path=${wheel_files_path}"
        echo "In wheel files path:"
        ls $wheel_files_path
        echo "wheel_files_path=${wheel_files_path}" >> $GITHUB_OUTPUT

    - name: Store release artifacts
      uses: actions/upload-artifact@v4
      id: release-artifacts
      with:
        name: build-release-${{ steps.set-release-facts.outputs.repo_short }}${{ inputs.unique_artifact_suffix }}
        path: ${{ github.workspace }}/release/**
