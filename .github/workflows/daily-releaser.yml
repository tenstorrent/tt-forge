name: Daily Releaser

on:
  schedule:
  - cron: '0 6 * * *'
  workflow_dispatch:
    inputs:
      draft:
        type: boolean
        default: true
        description: Put PR in draft mode for testing
      delete-drafts:
        type: boolean
        default: false
        description: Delete drafts
      repo:
        type: string
        description: 'Repo to release e.g tt-forge-fe'
        required: false
        default: ''
      overwrite_releases:
        type: boolean
        default: false
        description: Overwrite releases
      slack-token:
        type: string
        description: 'Slack token'
        required: false
        default: ''
      gha-token:
        type: string
        description: 'GHA token'
        required: false
        default: ''

  workflow_call:
    inputs:
      draft:
        type: boolean
        default: true
        description: Put PR in draft mode for testing
      delete-drafts:
        type: boolean
        default: false
        description: Delete drafts
      repo:
        type: string
        description: 'Repo to release e.g tt-forge-fe'
        required: false
        default: ''
      overwrite_releases:
        type: boolean
        default: false
        description: Overwrite releases
      slack-token:
        type: string
        description: 'Slack token'
        required: false
        default: ''
      gha-token:
        type: string
        description: 'GHA token'
        required: false
        default: ''

permissions:
  pages: write
  id-token: write
  contents: write

jobs:

  get-repos:
    outputs:
      json_results: ${{ steps.get-repos.outputs.json_results }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Get Repos
      id: get-repos
      uses: ./.github/actions/get-repos
      with:
        repo: ${{ inputs.repo }}

# TODO: Disable RC and Stable release for now
#  release-rc-stable:
#    needs: get-repos
#    strategy:
#      fail-fast: false
#      matrix:
#        include: ${{fromJson(needs.get-repos.outputs.json_results)}}
#    uses: ./.github/workflows/update-releases.yml
#    secrets: inherit
#    name: ${{ matrix.repo_short }} Update RC and Stable
#    with:
#      draft: ${{ inputs.draft || false}}
#      repo: ${{ matrix.repo }}
#      overwrite_releases: ${{ inputs.overwrite_releases || false}}

  release-nightly:
    needs: get-repos
    strategy:
      fail-fast: false
      matrix:
        include: ${{fromJson(needs.get-repos.outputs.json_results)}}
    name: ${{ matrix.repo_short }} Nightly
    uses: ./.github/workflows/nightly-release.yml
    secrets: inherit
    with:
      draft: ${{ inputs.draft || false}}
      repo: ${{ matrix.repo }}
      overwrite_releases: ${{ inputs.overwrite_releases || false}}

  fail-notify:
    if: always()
    needs:
      #- release-rc-stable
      - release-nightly
    runs-on: ubuntu-latest
    outputs:
      is-main: ${{ steps.branch-check.outputs.IS_MAIN }}
      failed: ${{ steps.check.outputs.failure }}
    steps:
      - name: Check if branch is main
        id: branch-check
        run: echo "IS_MAIN=$(if [ '${{ github.ref }}' == 'refs/heads/main' ]; then echo true; else echo false; fi)" >> $GITHUB_OUTPUT
      - name: Check if the needed jobs succeeded or failed
        id: check
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
          # TODO: Disable RC and Stable release for now
          #allowed-skips: release-rc-stable,release-nightly
          allowed-skips: release-nightly

  fail-send-msg:
    if: always()
    needs:
      - fail-notify
    runs-on: ubuntu-latest
    steps:
      - name: Send Fail Notification
        if: ${{ needs.fail-notify.outputs.failed == 'true' && needs.fail-notify.outputs.is-main == 'true' }}
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "text": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/attempts/${{ github.run_attempt }}",
              "channel": "C088QN7E0R3"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ inputs.slack-token || secrets.SLACK_NIGHTLY_FAIL }}

  delete-drafts:
    needs: fail-send-msg
    if: ${{ inputs.delete-drafts }}
    runs-on: ubuntu-latest
    steps:
      - name: Delete drafts
        uses: hugo19941994/delete-draft-releases@v1.0.0
        env:
          GITHUB_TOKEN: ${{ inputs.gha-token || secrets.GITHUB_TOKEN }}
