name: Daily Releaser

on:
  schedule:
  - cron: '0 6 * * *'
  workflow_dispatch:
    inputs:
      draft:
        type: boolean
        default: true
        description: Put PR in draft mode for testing
      delete-drafts:
        type: boolean
        default: false
        description: Delete drafts
      repo:
        type: string
        description: 'Repo to release e.g tt-forge-fe. Default to all repos'
        required: false
        default: ''
      overwrite_releases:
        type: boolean
        default: false
        description: Overwrite releases

  workflow_call:
    inputs:
      draft:
        type: boolean
        default: true
        description: Put PR in draft mode for testing
      delete-drafts:
        type: boolean
        default: false
        description: Delete drafts
      repo:
        type: string
        description: 'Repo to release e.g tt-forge-fe'
        required: false
        default: ''
      overwrite_releases:
        type: boolean
        default: false
        description: Overwrite releases

permissions:
  pages: write
  id-token: write
  contents: write
  actions: write
  packages: write
  attestations: write

jobs:

  get-repos:
    outputs:
      json_results: ${{ steps.get-repos.outputs.json_results }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Get Repos
      id: get-repos
      uses: ./.github/actions/get-repos
      with:
        repo: ${{ inputs.repo }}

  update-releases:
    if: ${{ !inputs.draft }}
    needs:
      - get-repos
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.get-repos.outputs.json_results) }}
    uses: ./.github/workflows/update-releases.yml
    secrets: inherit
    name: ${{ matrix.repo_short }} Update RC and Stable
    with:
      draft: ${{ inputs.draft || false}}
      repo: ${{ matrix.repo }}
      overwrite_releases: false

  release-nightly:
    needs: get-repos
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.get-repos.outputs.json_results) }}
    name: ${{ matrix.repo_short }} Nightly Release
    secrets: inherit
    uses: ./.github/workflows/release.yml
    with:
      draft: ${{ inputs.draft || false }}
      repo: ${{ matrix.repo }}
      overwrite_releases: ${{ inputs.overwrite_releases || false }}
      release_type: nightly
      repo_short: ${{ matrix.repo_short }}


  fail-notify:
    if: always()
    needs:
      - release-nightly
    runs-on: ubuntu-latest
    outputs:
      is-main: ${{ steps.branch-check.outputs.IS_MAIN }}
      failed: ${{ steps.check.outputs.failure }}
    steps:
      - name: Check if branch is main
        id: branch-check
        run: echo "IS_MAIN=$(if [ '${{ github.ref }}' == 'refs/heads/main' ]; then echo true; else echo false; fi)" >> $GITHUB_OUTPUT
      - name: Check if the needed jobs succeeded or failed
        id: check
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
          allowed-skips: release-nightly

  fail-send-msg:
    if: always()
    needs:
      - fail-notify
    runs-on: ubuntu-latest
    steps:
      - name: Send Fail Notification
        if: ${{ needs.fail-notify.outputs.failed == 'true' && needs.fail-notify.outputs.is-main == 'true' }}
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "text": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/attempts/${{ github.run_attempt }}",
              "channel": "C088QN7E0R3"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ inputs.slack-token || secrets.SLACK_NIGHTLY_FAIL }}
