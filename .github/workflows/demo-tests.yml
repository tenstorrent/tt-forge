name: Demo tests

on:
  workflow_dispatch:
    inputs:
      docker-image:
        description: "Docker image used in tests"
        required: false
        type: string
        default: "harbor.ci.tenstorrent.net/ghcr.io/tenstorrent/tt-forge/tt-forge-slim:latest"
  workflow_call:
    inputs:
      docker-image:
        description: "Docker image used in tests"
        required: true
        type: string

jobs:
  demo-test:
    name: Demo ${{ matrix.demos.frontend }} ${{ matrix.demos.demo }} on ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        runs-on:
          - tt-beta-ubuntu-2204-n150-large-stable
          - tt-beta-ubuntu-2204-p150b-large-stable
        demos:
          - { "frontend": "tt-forge-fe", "demo": "cnn/mobile_netv2_demo.py" }
          - { "frontend": "tt-forge-fe", "demo": "cnn/resnet_50_demo.py" }
          - { "frontend": "tt-forge-fe", "demo": "cnn/resnet_onnx_demo.py" }
          - { "frontend": "tt-forge-fe", "demo": "nlp/bert_demo.py" }
          - { "frontend": "tt-torch", "demo": "resnet50_benchmark.py", pyreq: "loguru requests transformers datasets torchvision pytest tabulate" }
          - { "frontend": "tt-torch", "demo": "resnet50_demo.py", pyreq: "loguru requests transformers datasets torchvision pytest tabulate" }
          - { "frontend": "tt-xla", "demo": "/albert_base_v2/demo.py", "pyreq_file": "true" }
          - { "frontend": "tt-xla", "demo": "/gpt2/demo.py", "pyreq_file": "true" }
          - { "frontend": "tt-xla", "demo": "/opt_125m/demo.py", "pyreq_file": "true" }
        include:
          - demos: { "frontend": "tt-torch", "demo": "llama_7b_pipeline_parallel.py", pyreq: "loguru requests transformers==4.52.4 datasets torchvision pytest tabulate accelerate" }
            runs-on: tt-beta-ubuntu-2204-n300-large-stable
          - demos: { "frontend": "tt-torch", "demo": "llama3.2_generate_demo.py", pyreq: "transformers==4.52.4" }
            runs-on: tt-beta-ubuntu-2204-n150-large-stable

    runs-on: ${{ matrix.runs-on }}
    container:
      image: ${{ inputs.docker-image }}
      options: --device /dev/tenstorrent --user root
      volumes:
        - /dev/hugepages:/dev/hugepages
        - /dev/hugepages-1G:/dev/hugepages-1G
        - /etc/udev/rules.d:/etc/udev/rules.d
        - /lib/modules:/lib/modules
        - /opt/tt_metal_infra/provisioning/provisioning_env:/opt/tt_metal_infra/provisioning/provisioning_env

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags
          submodules: 'recursive'

      - name: Install system and python dependencies
        shell: bash
        run: |
          if [ -n "${{ matrix.demos.libreq }}" ]; then
            apt-get install -y -qq --no-install-recommends ${{ matrix.demos.libreq }}
          fi

          source /home/forge/venv-${{ matrix.demos.frontend }}/bin/activate
          if [ -n "${{ matrix.demos.pyreq }}" ]; then
            pip install ${{ matrix.demos.pyreq }}
          fi
          if [ "${{ matrix.demos.pyreq_file }}" == "true" ]; then
            REQUIREMENTS_PATH=$(dirname demos/${{ matrix.demos.frontend }}/${{ matrix.demos.demo }})
            pip install -r $REQUIREMENTS_PATH/requirements.txt
          fi

      - name: Run ${{ matrix.demos.frontend }} demo ${{ matrix.demos.demo }}
        shell: bash
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
          HF_HOME: /mnt/dockercache/huggingface
        run: |
          source /home/forge/venv-${{ matrix.demos.frontend }}/bin/activate
          pip list | grep -E 'tt_|tt-|pjrt-' # Print installed version
          PYTHONPATH=$PYTHONPATH:$(pwd) python demos/${{ matrix.demos.frontend }}/${{ matrix.demos.demo }}
