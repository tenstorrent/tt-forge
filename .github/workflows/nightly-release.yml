name: Nightly Release

on:
  workflow_call:
    inputs:
      draft:
        type: boolean
        default: true
        description: Put PR in draft mode for testing
      repo:
        type: string
        description: 'Repo to release e.g tt-forge-fe'
        required: true
        default: ''
      prerelease:
        type: boolean
        default: true
        description: Put PR in prerelease mode for testing


permissions:
  pages: write
  id-token: write
  contents: write

jobs:
  get-version:
    outputs:
        tag: ${{ steps.version-tag.outputs.tag }}
        repo_short: ${{ steps.version-tag.outputs.repo_short }}

    runs-on: ubuntu-latest
    env:
        GH_TOKEN: ${{ github.token }}
    steps:
    - uses: actions/checkout@v4
    - name: version tag
      id: version-tag
      run: |
        source .version
        repo="${{ inputs.repo }}"
        repo_short="${repo#tenstorrent/}" >> $GITHUB_OUTPUT
        tag="${VERSION}.dev$(date +"%Y%m%d")"
        echo "tag=$tag" >> $GITHUB_OUTPUT
        echo "repo_short=$repo_short" >> $GITHUB_OUTPUT

  build-release:
    name: Build Release ${{ needs.get-version.outputs.tag }}
    outputs:
      release-artifacts-id: ${{ steps.build-release.outputs.release-artifacts-id }}
      run-conclusion: ${{ steps.build-release.outputs.run-conclusion }}
    runs-on: ubuntu-latest
    needs: get-version
    env:
        GH_TOKEN: ${{ github.token }}
    steps:
    - uses: actions/checkout@v4
    - uses: mukunku/tag-exists-action@v1.6.0
      id: check-tag
      with:
        tag: "${{needs.get-version.outputs.repo_short }}-${{ needs.get-version.outputs.tag }}"

    - name: Build Release Artifacts
      if: steps.check-tag.outputs.exists == 'false'
      id: build-release
      uses: ./.github/actions/build-release
      with:
        draft: ${{ inputs.draft }}
        repo: ${{ inputs.repo }}
        release_type: 'nightly'
        branch: 'main'
        new_version_tag: ${{ needs.get-version.outputs.tag }}
        workflow_allow_failed: true

  test-release:
    # Only run if build-release was successful for nightly
    if: ${{ needs.build-release.outputs.run-conclusion == 'success' }}
    needs: build-release
    strategy:
      fail-fast: false
      matrix:
        build: [
          { runs-on: n150, container: 'harbor.ci.tenstorrent.net/docker.io/ubuntu:24.04' },
          { runs-on: n300, container: 'harbor.ci.tenstorrent.net/docker.io/ubuntu:24.04' }
        ]
    runs-on: ${{ format('tt-beta-ubuntu-2204-{0}-large-stable', matrix.build.runs-on) }}
    container:
      image: ${{ matrix.build.container }}
      options: ${{ matrix.build.container-options || '--device /dev/tenstorrent' }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/install-verification
        with:
          release-artifacts-id: ${{ needs.build-release.outputs.release-artifacts-id }}

  publish-release:
    needs:
      - build-release
      - get-version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/publish-release
        with:
          draft: ${{ inputs.draft }}
          repo: ${{ inputs.repo }}
          release_type: 'nightly'
          new_version_tag: ${{ needs.get-version.outputs.tag }}
          prerelease: ${{ inputs.prerelease || true }}
          release-artifacts-id: ${{ needs.build-release.outputs.release-artifacts-id }}
