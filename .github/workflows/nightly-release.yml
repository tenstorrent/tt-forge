name: Nightly Release

on:
  workflow_call:
    inputs:
      draft:
        type: boolean
        default: true
        description: Put PR in draft mode for testing
      repo:
        type: string
        description: 'Repo to release e.g tt-forge-fe'
        required: true
        default: ''
      overwrite_releases:
        type: boolean
        default: false
        description: Overwrite releases


permissions:
  pages: write
  id-token: write
  contents: write

jobs:
  get-version:
    outputs:
        tag: ${{ steps.version-tag.outputs.tag }}
        repo_short: ${{ steps.version-tag.outputs.repo_short }}

    runs-on: ubuntu-latest
    env:
        GH_TOKEN: ${{ github.token }}
    steps:
    - uses: actions/checkout@v4
    - name: version tag
      id: version-tag
      run: |
        if [[ ${{ github.repository }} == 'tenstorrent/tt-forge' ]]; then
          source .version
        else
          wget https://raw.githubusercontent.com/tenstorrent/tt-forge/refs/heads/main/.version
          source .version
        fi

        repo="${{ inputs.repo }}"
        repo_short="${repo#tenstorrent/}" >> $GITHUB_OUTPUT
        tag="${VERSION}.dev$(date +"%Y%m%d")"
        echo "tag=$tag" >> $GITHUB_OUTPUT
        echo "repo_short=$repo_short" >> $GITHUB_OUTPUT

  build-release:
    name: Build Release ${{ needs.get-version.outputs.tag }}
    outputs:
      release-artifacts-id: ${{ steps.build-release.outputs.release-artifacts-id }}
      run-conclusion: ${{ steps.build-release.outputs.run-conclusion }}
      check-tag: ${{ steps.check-tag.outputs.exists }}
      target_commit: ${{ steps.build-release.outputs.target_commit }}
    runs-on: ubuntu-latest
    needs: get-version
    env:
        GH_TOKEN: ${{ github.token }}
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/set-release-facts
      id: set-release-facts
      with:
        repo: ${{ inputs.repo }}
        release_type: 'nightly'
        draft: ${{ inputs.draft }}
        new_version_tag: ${{ needs.get-version.outputs.tag }}

    - uses: mukunku/tag-exists-action@v1.6.0
      if: ${{ !inputs.overwrite_releases }}
      id: check-tag
      with:
        tag: "${{ steps.set-release-facts.outputs.new_version_tag }}"
        repo: ${{ inputs.draft && 'tenstorrent/tt-forge' || inputs.repo }}

    - name: Build Release Artifacts
      if: ${{ inputs.draft || inputs.overwrite_releases ||steps.check-tag.outputs.exists == 'false' }}
      id: build-release
      uses: ./.github/actions/build-release
      with:
        draft: ${{ inputs.draft }}
        repo: ${{ inputs.repo }}
        release_type: 'nightly'
        branch: 'main'
        new_version_tag: ${{ needs.get-version.outputs.tag }}
        workflow_allow_failed: true

  publish-release:
    if: ${{ inputs.draft || inputs.overwrite_releases || needs.build-release.outputs.check-tag == 'false'  }}
    needs:
      - build-release
      - get-version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/publish-tenstorrent-pypi
        # Skip Wheel PyPI upload in workflow test
        if: ${{ !inputs.draft }}
        with:
          release-artifacts-id: ${{ needs.build-release.outputs.release-artifacts-id }}
          release-artifacts-name: build-release-${{ needs.get-version.outputs.repo_short }}
          release-artifacts-wheel-path: artifacts
          role-to-assume: ${{ secrets.PYPI_ROLE }}
          region: ${{ secrets.PYPI_REGION }}
          bucket: ${{ secrets.PYPI_BUCKET }}
          new_version_tag: ${{ needs.get-version.outputs.tag }}
          repo: ${{ inputs.repo }}
          overwrite_releases: ${{ inputs.overwrite_releases }}

      - uses: ./.github/workflows/mega-docker.yml
        if: ${{ inputs.repo == 'tenstorrent/tt-forge' && !inputs.draft }}
        with:
          version_tag: ${{ needs.get-version.outputs.tag }}

      - uses: ./.github/actions/publish-github-release
        with:
          draft: ${{ inputs.draft }}
          repo: ${{ inputs.repo }}
          release_type: 'nightly'
          release_token: ${{ secrets.TT_FORGE_RELEASER }}
          new_version_tag: ${{ needs.get-version.outputs.tag }}
          target_commit: ${{ needs.build-release.outputs.target_commit }}
          prerelease: true
          release-artifacts-id: ${{ needs.build-release.outputs.release-artifacts-id }}
