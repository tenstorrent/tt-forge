name: Performance benchmark
run-name: Performance benchmark ${{ inputs.parent_run_id && format('parent_run_id:{0}', inputs.parent_run_id) || '' }}

on:
  workflow_dispatch:
    inputs:
      docker-image:
        description: "Docker image used in tests"
        required: false
        type: string
        default: "ghcr.io/tenstorrent/tt-forge-slim:latest"
      project-filter:
        description: "Project filter"
        required: false
        type: choice
        options:
          - tt-forge-fe
          - tt-xla
          - tt-forge
        default: tt-forge
      test-filter:
        description: "Only run tests that contains"
        required: false
        type: string
      update-wheel:
        description: "Update wheel for the project"
        required: false
        type: boolean
      sh-runner:
        description: "Run on shared runner"
        required: false
        type: boolean
      parent_run_id:
        description: "Parent run id is used to track child workflows in automated dispatch workflow calls"
        required: false
        type: string
        default: ""
  workflow_call:
    inputs:
      docker-image:
        description: "Docker image used in tests"
        required: false
        # TODO(vvasin): Update this to the new forge image after 0.4.0 is published for latest tag
        default: "ghcr.io/tenstorrent/forge-ubuntu-22-04-py3-11:latest"
        type: string
      project:
        description: "Project(s) to launch tests (space separated)"
        required: false
        type: string
      run_id_source:
        description: "Repo source for provided workflow run ID"
        required: false
        type: string
      run_id:
        description: "Workflow ID to use for the new version of wheel"
        required: false
        type: string
      ref:
        description: "Git ref to checkout"
        required: false
        type: string
      test-filter:
        description: "Only run tests that contains"
        required: false
        type: string
      sh-runner:
        description: "Run on shared runner"
        required: false
        type: boolean
      on_uplift_pr:
        description: "Performance benchmark triggered from an uplift PR"
        required: false
        type: boolean

# todo(vvukoman): add these permissions to mlir and frontend workflow's that call this wf
permissions:
  id-token: write
  actions: write

jobs:
  filter-tests:
    runs-on: ubuntu-latest
    outputs:
      matrix_n150: ${{ steps.set-perf-benchmarks.outputs.matrix_n150 }}
      matrix_p150: ${{ steps.set-perf-benchmarks.outputs.matrix_p150 }}
      matrix_skip: ${{ steps.set-perf-benchmarks.outputs.matrix_skip }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        repository: 'tenstorrent/tt-forge'
        fetch-depth: 1
        ref: ${{ inputs.ref || github.ref }}
        submodules: 'recursive'

    - name: Filter Matrix
      id: set-perf-benchmarks
      shell: bash
      run: |
        result=$(python .github/workflows/filter-test-matrix.py \
          .github/workflows/perf-bench-matrix.json \
          ${{ inputs.project-filter || inputs.project || '' }} \
          ${{ inputs.test-filter && format('--test-filter "{0}"', inputs.test-filter) || '' }} \
          ${{ inputs.sh-runner && '--sh-runner' || '' }})

        matrix=$(echo $result | jq -r -c '.matrix')
        matrix_n150=$(echo $result | jq -r -c '.matrix | map(select(."runs-on" | contains("n150")))')
        matrix_p150=$(echo $result | jq -r -c '.matrix | map(select(."runs-on" | contains("p150")))')
        matrix_skip=$(echo $result | jq -r '.matrix_skip')

        echo $matrix_n150
        echo $matrix_p150

        echo "matrix_n150=$matrix_n150" >> $GITHUB_OUTPUT
        echo "matrix_p150=$matrix_p150" >> $GITHUB_OUTPUT
        echo "matrix_skip=$matrix_skip" >> $GITHUB_OUTPUT

        # Set up the summary for the job
        echo "### Perf benchmarks inputs" >> $GITHUB_STEP_SUMMARY
        echo "Project filter: ${{ inputs.project-filter || inputs.project }}" >> $GITHUB_STEP_SUMMARY
        echo "Test filter: ${{ inputs.test-filter }}" >> $GITHUB_STEP_SUMMARY
        echo "Run ID source: ${{ inputs.run_id_source }}" >> $GITHUB_STEP_SUMMARY
        echo "Run ID: ${{ inputs.run_id }}" >> $GITHUB_STEP_SUMMARY
        echo "Shared runner: ${{ inputs.sh-runner }}" >> $GITHUB_STEP_SUMMARY

  run-n150-perf-benchmarks:
    needs: filter-tests
    if: ${{ needs.filter-tests.outputs.matrix_skip == 'false' }}
    secrets: inherit
    uses: ./.github/workflows/call-perf-test.yml
    with:
      matrix: ${{ needs.filter-tests.outputs.matrix_n150 }}
      docker-image: ${{ inputs.docker-image }}
      project-filter: ${{ inputs.project-filter }}
      project: ${{ inputs.project }}
      update-wheel: ${{ inputs.update-wheel || false }}
      sh-runner: ${{ inputs.sh-runner }}
      parent_run_id: ${{ inputs.parent_run_id }}
      run_id_source: ${{ inputs.run_id_source }}
      run_id: ${{ inputs.run_id }}
      ref: ${{ inputs.ref }}
      on_uplift_pr: ${{ inputs.on_uplift_pr || false }}

  run-p150-perf-benchmarks:
    needs: filter-tests
    if: ${{ needs.filter-tests.outputs.matrix_skip == 'false' }}
    secrets: inherit
    uses: ./.github/workflows/call-perf-test.yml
    with:
      matrix: ${{ needs.filter-tests.outputs.matrix_p150 }}
      docker-image: ${{ inputs.docker-image }}
      project-filter: ${{ inputs.project-filter }}
      project: ${{ inputs.project }}
      update-wheel: ${{ inputs.update-wheel || false }}
      sh-runner: ${{ inputs.sh-runner }}
      parent_run_id: ${{ inputs.parent_run_id }}
      run_id_source: ${{ inputs.run_id_source }}
      run_id: ${{ inputs.run_id }}
      ref: ${{ inputs.ref }}
      on_uplift_pr: ${{ inputs.on_uplift_pr || false }}

  fail-notify:
    if: always()
    needs:
      - run-n150-perf-benchmarks
      - run-p150-perf-benchmarks
    runs-on: ubuntu-latest
    outputs:
      is-main: ${{ steps.branch-check.outputs.IS_MAIN }}
      failed: ${{ steps.check.outputs.failure }}
      is-draft: ${{ steps.draft-check.outputs.IS_DRAFT }}
      version_tag: ${{ steps.version-tag.outputs.version_tag }}
    steps:
      - name: Check if branch is main
        id: branch-check
        run: echo "IS_MAIN=$(if [ '${{ github.ref }}' == 'refs/heads/main' ]; then echo true; else echo false; fi)" >> $GITHUB_OUTPUT
      - name: Get version tag
        shell: bash
        id: version-tag
        run: |
          docker_image="${{ inputs.docker-image }}"
          version_tag="${docker_image##*:}"
          echo "version_tag=$version_tag"
          echo "version_tag=$version_tag" >> $GITHUB_OUTPUT
      - name: Check draft
        id: draft-check
        run: |
          parent_run_id="${{ inputs.parent_run_id }}"
          set +e
          draft_check="$(echo "$parent_run_id" | grep 'draft')"
          set -e
          echo "draft_check=$draft_check"
          IS_DRAFT="$(if [ -n "$draft_check" ]; then echo true; else echo false; fi)"
          echo "IS_DRAFT=$IS_DRAFT"
          echo "IS_DRAFT=$IS_DRAFT" >> $GITHUB_OUTPUT
      - name: Check if the needed jobs succeeded or failed
        id: check
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
          allowed-skips: run-perf-benchmarks

  fail-send-msg:
    if: always()
    needs:
      - fail-notify
    runs-on: ubuntu-latest
    steps:
      - name: Send Fail Notification
        if: ${{ needs.fail-notify.outputs.failed == 'true' && needs.fail-notify.outputs.is-main == 'true' && needs.fail-notify.outputs.is-draft == 'false' && inputs.parent_run_id != '' }}
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "text": "Perf tests ${{ inputs.project-filter }} ${{ needs.fail-notify.outputs.version_tag }} failed: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/attempts/${{ github.run_attempt }}",
              "channel": "C088QN7E0R3"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ inputs.slack-token || secrets.SLACK_NIGHTLY_FAIL }}


  produce-data:
    needs:
      - fail-send-msg
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: Trigger produce_data.yml
        uses: ./.github/actions/trigger-workflow
        env:
          GH_TOKEN: ${{ github.token }}
        with:
          workflow_name: "produce_data.yml"
          wait: false
          wait_for_run_url: true
          json_params: '{"run_id": "${{ github.run_id }}", "run_attempt": "${{ github.run_attempt }}", "sleep": "10" }'
